---
title: IKEv2 Link Maximum Atomic Packet and Packet Too Big Notification Extension
abbrev: LMTA and PTB Notification
docname: draft-liu-ipsecme-ikev2-mtu-dect-03
ipr: trust200902
stream: IETF
area: Security
wg: IPsecme
kw: Internet-Draft
cat: std

pi:
  toc: yes
  sortrefs: yes
  symrefs: yes

author:
      -
        ins: D. Liu
        name: Daiying Liu
        org: Ericsson
        role: editor
        email: harold.liu@ericsson.com
      -
        ins: D. Migault
        name: Daniel Migault
        org: Ericsson
        email: daniel.migault@ericsson.com
      -
        ins: R. Liu
        name: Renwang Liu
        org: Ericsson
        email: renwang.liu@ericsson.com
      -
        ins: C. Zhang
        name: Congjie Zhang
        org: Ericsson
        email: congjie.zhang@ericsson.com


--- abstract

This document defines the IKEv2 Link Maximum Atomic Packet Notification and Packet Too Big Extension.
This extension enables an egress security gateway to notify its ingress counter part that fragmentation is happening or a packet too big is received (and cannot be decrypted).
In both cases, the egress node provides MTU information that enable the ingress node can configure appropriately its Tunnel MTU (TMTU) to prevent fragmentation or PTB to be transmitted.

--- middle

# Introduction {#sec1}

Fragments reassembling at the egress security gateway requires additional resources which under heavy load results in service degradations. 
Then, as detailed in {{?RFC4963}}, {{!RFC6864}} or {{!RFC8900}} fragmentation is considered fragile and not sufficiently robust at high data rates.
Typically, the 16-bit IPv4 identification field is not large enough to prevent duplication making fragmentation not sufficiently robust at high data rates.
In IPv6 the 32 byte identification field makes collision happens less often.

{{fig-frag}} depicts various fragmentation scenarios that can occurs when Tunnel Transit Packets (TTP) are encapsulated over an IPsec tunnel and carried between a ingress and a egress security gateway as Tunnel Link Packet (TLP).

~~~
Source          Security             Security             Destination
or              Gateway              Gateway              or
Sender       (Ingress node)        (Egress node)          Receiver

+--+             +---+                 +---+              +---+
|  |  +  +  +    |   |  +  +  +  +  +  |   |  +  +  +  +  |   |
+--+  routers    +---+    routers      +---+  routers     +---+
                  <--------------------->
                            N
+---+---+----+                            +---+---+----+
|IPs|IPd|Data|  Tunnel Transit Packet     |IPs|IPd|Data|
+---+---+----+         (TTP)              +---+---+----+



1) No fragmentation

                +---+---+---+---+---+----+
                |IPi|IPe|ESP|IPs|IPd|Data| Tunnel Link Packet
                +---+---+---+---+---+----+       (TLP)

2) Mid-tunnel (performed by a router on N)
  (only for IPv4 DF=0  TLP)
                         +---+---+---+---+---+--+
                         |IPi|IPe|ESP|IPs|IPd|Da| (TLP)
                         +---+---+---+---+---+--+
                     +---+---+--+
                     |IPi|IPe|ta| (TLP)
                     +---+---+--+

3) Inner fragmentation (performed by the Ingress node)
  (only for IPv4 DF=0 TTP)

                +---+---+---+---+---+--+
                |IPi|IPe|ESP|IPs|IPd|Da| (TLP)
                +---+---+---+---+---+--+
            +---+---+---+---+---+--+
            |IPi|IPe|ESP|IPs|IPd|ta| (TLP)
            +---+---+---+---+---+--+

4) Outer fragmentation (performed by the Ingress node)
   (IPv4 or IPv6 TLP)
                +---+---+---+---+---+--+
                |IPi|IPe|ESP|IPs|IPd|Da| (TLP)
                +---+---+---+---+---+--+
            +---+---+--+
            |IPi|IPe|ta| (TLP)
            +---+---+--+

5) Source fragmentation
  (IPv6 or IPv4)
    +---+---+--+
    |IPs|IPd|Da|  (TTP)
    +---+---+--+
+---+---+--+
|IPs|IPd|ta|
+---+---+--+

~~~
{: #fig-frag title="Illustration of Different Type of Fragmentation. 
IPs (resp. IPi, IPe, IPd) designates the IP addresse of the Source, (resp. the Ingress node, the Egress node, the Destination). 
The IPsec tunnel is considered as an ESP tunnel. 
The IP payload is represented as 'Data'. 
Fragmentation is illustrated in splicing 'Data' into 'Da' and 'ta'.
The figure does not show a difference between Data being encrypted or not, and the presence of the ESP header indicates the payload is encrypted." }

Reassembling is performed by the egress node in two cases.
Firstly when mid tunnel fragmentation happens (see 2 {{fig-frag}}) -- in which case the TLP header or outer header is using IPv4 and DF=0. 
Secondly when Outer fragmentation is performed by the ingress node (see 3 in {{fig-frag}}).
The main difference between the two scenarios is that with Outer fragmentation, the ingress node is aware that the egress performs reassembly. 
Note also that in both cases, reassembling the TLP in itself does not prevent the TTP to be deciphered unless the reassembled TLP exceeds the effective MTU to receive (EMTU_R) - that is the maximum size of the IPsec protected packet that can be accepted by the egress node to perform the ESP encapsulation. 


{{fig-esp-frag}} summarizes the various operations that are expected given the size of an IPsec protected TTP size.
The optimal size is the Tunnel maximum atomic packet (TMAP), that is the maximum TTP size that avoids fragmentation. Such TTP generates a Link maximum atomic packet (LMAP) LTP. 

~~~
          TMAP              TMTU   
+---------+-------------------+--------------> TTP 
|         |encap              |encap
|         |<--->|             |<--->|    
| No frag. (1)  |  Fragmentation    |
|               |  (2) Mid-tunnel   |  Packet To Big
|               |  (4) Outer        |
+---------------+-------------------+--------> IPsec encapsulated TTP 
              LMAP                EMTU_R
~~~
{: #fig-esp-frag title="Fragmentation and Packet Too Big as a function of the TTP size or LTP size" }

This document enables a egress node to inform the ingress node that:
* a received packet is fragmented
* a too big packet is received

By supporting this extension, the ingress and egress node commit themselves in optimizing the processing of the IPsec tunnel and prevent or at least limit reassembly operation to be performed.

The ingress security gateway SHOULD NOT perform outer fragmentation and SHOULD set their TMTU value so that TTP are not fragmented/reassembled.
In addition, for TTP with IPv4 addresses and DF=0, the ingress node SHOULD perform inner fragmentation to prevent reassembly at the egress node.  

The mechanism is especially useful when the tunnel between the ingress and egress nodes is using IPv4 outer IP addresses with DF=0 as the fragmentation may occur while the ingress may not be aware of it. 
With IPv4 DF=1 or IPv6, the mechanism essentially enables the egress node to send the TTP ICMP PTB information (being sent to the Source) to the ingress interface as well as to send the LTP ICMP PTB information being sent to the router of the ingress node) over a authenticated channel (IKEv2). 
In any case the egress node MUST send and send ICMP message as usual. 
The Source is not impacted, and the ingress node MUST prefer the trusted PTB information related to the LMTU received via IKEv2 rather than the one received via ICMP.
 
## Related works

This work differs from {{?I-D.ietf-intarea-tunnels}} in that {{?I-D.ietf-intarea-tunnels}} which considers the router component - carrying the TTP - and the interface component - handling LTP - independent. 
Independence of the Tunnel MTU (for TTP) and link layer MTU for (LTP) is provided by performing outer fragmentation when needed.
{{!RFC4301}} takes another view considers the router component can adapt to the specific needs of the interface component.
In our case, the router MTU can be changed so the source sends PTP of an expected TMAP size. 
Note however, that a significant difference between MPA and MTU is that fragmentation is considered as a normal operation and that ICMP PTB is only expected when the router is not able to handle the packet that is when the (reassembled) packet exceeds the MTU (EMTU_R) or Link MTU (LMTU).

This mechanism follows the {{!RFC8900}} that recommends each layer handles fragmentation at their layer and to reduce the reliance on IP fragmentation to the greatest degree possible.
This document does not describes a Path MTU Discovery (PMTUD)  procedure {{!RFC1191}} nor an Execute Packetization Layer PMTUD (PLMTUD) {{!RFC4821}} procedure.
PLMTUD work has been started in {{?I-D.spiriyath-ipsecme-dynamic-ipsec-pmtu}}.
This document remains focused on providing information on the state of the egress node to the ingress node. Information in question are fragmentation related but are limited to the observation of fragmentation as well as as the EMTU_R and LMTU value.
This document let the ingress node interpret these information an take the necessary actions. PLMTUD is much more complex especially as IPsec considers multiple channels such as IKE and IPsec protected data and requires to handle black holing scenarios.

Sending EMTU_R when a too big encapsulated TTP is provided to the egress interface is similar to ICMP PTB, except that this information is sent between the egress and ingress nodes as opposed to between the egress and the Source. 
Sending LMTU when a too big LTP is received by the egress router is similar to an ICMP PTB except that the message is carried over the IKEv2 channel.
In both cases, the egress node SHOULD send this ICMP PTB message. 

## Why not using DF=1 to avoid Mid fragmentation ?

One can reasonably question why setting the IPv4 DF=1 is not sufficient to avoid fragmentation. 
The reason is that this setting DF=1 leads to a black holing situation, and setting DF=0 is the way to mitigate this. 
Suppose the Don't Fragment bit to 1 in the IPv4 Header of the Tunnel Link Packet. 
If that packet becomes larger than the link Maximum Transmission Unit (MTU), the packet is dropped by an on-path router and an ICMPv4 message Packet Too Big (PTB) {{!RFC0792}} is returned to the sending address.
The ICMPv4 PTB message is a Destination Unreachable message with Code equal to 4 and was augmented by {{!RFC1191}} to indicate the acceptable MTU.
Unfortunately, one cannot rely on such procedure as in practice some routers do not check the MTU and as such do not send ICMPv4 messages.
In addition, when ICMPv4 message are sent these message are unprotected, and may be blocked by firewalls or ignored.
This results in IPv4 packets being dropped without the security gateways being aware of it which is also designated as black holing.
To prevent this situation, IPv4 packets often set their DF bit set to 0.
In this case, as described in {{!RFC0792}}, when a packet size exceeds its MTU, the node fragments the incoming packet in multiple fragments.

# Requirements Language {#sec2}

{::boilerplate bcp14}

Tunnel, Ingress node, Egress node, Ingress Interface, Egress interface, Tunnel Transit Packets (TTP), Tunnel Link Packet (TLP), Link MTU (LMTU), Tunnel MTU (TMTU), Tunnel maximum atomic packet (TMAP), effective MTU to receive (EMTU_R) are defined in {{?I-D.ietf-intarea-tunnels}}. 

# Link Maximum Atomic Packet and Packet Too Big Support Negotiation

During an IKEv2 negotiation, the initiator and the responder indicate their support for the Link Maximum Atomic Packet and Packet Too Big Extension by exchanging the LMAP_AND_PTB_SUPPORTED notifications. 
This notification MUST be sent in the IKE_AUTH exchange (in case of multiple IKE_AUTH exchanges - in the first IKE_AUTH message from initiator and in the last IKE_AUTH message from responder). 
If both the initiator and the responder send this notification during the IKE_AUTH exchange, peers may notify each other with an IPv4 Link Maximum Atomic Packet Notification when fragmentation is observed. 
Upon receiving such notifications, the peers may take the necessary actions to prevent such fragmentation to occur.

~~~
Initiator                         Responder
-------------------------------------------------------------------
HDR, SA, KEi, Ni -->
                         <-- HDR, SA, KEr, Nr
HDR, SK {IDi, AUTH,
     SA, TSi, TSr,
     N(LMAP_AND_PTB_SUPPORTED)} -->
                         <-- HDR, SK {IDr, AUTH,
                             SA, TSi, TSr,
                             N(LMAP_AND_PTB_SUPPORTED)}
~~~


# Sending a Link Maximum Atomic Packet Notification {#sec-send-lmap}

The egress security gateway detects fragmentation occurred when it receives an initial fragment; e.g. with the Flags' More Fragment Bit set to 1 and the Fragment Offset set to 0. 
Upon receiving such packet, the egress node determines the IP version (IPVersion) and the fragment length.
For an IPv4 packet, the fragment length (FragLen) is indicated by the Total Length field ( see {{!RFC0791}}). 
For an IPv6 packet the FragLen is indicated by the Payload Length (see {{!RFC8200, Section 3}}. 
Note that that these values have different meanings as with an IPv6 fragment, FragLen does not includes the IPv6 header but only the payload. 


~~~
Egress Security Gateway                 Ingress Security Gateway
-------------------------------------------------------------------
HDR SK { N(LMAP)} -->
~~~

# Receiving a Link Maximum Atomic Packet Notification {#sec-recv-lmap}

Upon receiving a LMAP notification, the ingress node derives the tunnel MAP (TMAP) from the Link MAP (LMAP) derived by the FragLen and IPVersion. 

~~~
if IPVersion is 4:
  LMAP = FragLen
elif IPVersion is 6:
  LMAP = FragLen + 40
TMAP = LMAP - outer IP header - encapsulation overhead
~~~
{: #fig-tmap title="Computation of TMAP" }

where 
IPVersion:
: The IP version of the fragment provided by the LMAP notification (see {{sec-send-lmap}}).
FragLen:
: The Fragment length provided by the LMAP notification (see {{sec-send-lmap}}). 
LMAP:
: For an IPv4 packet, LMAP is directly provided by the fragment length of the LMAP Notification.
For an IPv6 packet, LMAP needs to adds the IPv6 Header length (40 bytes) to the fragment length of the LMAP Notification. 
outer IP header:
: The IP header of the LTP  
encapsulation overhead:
 contains the ESP header, the ESP Trailer including the variable Pad field.
When the padding is minimizing the Pad Len, the encapsulation header is set to 14 (+ the size of the ICV).

The ingress security gateway SHOULD propagates the TMAP as the tunnel MTU back to the Source so the size of future TTP packets does not exceeds the TMAP - eventually performing source fragmentation.
To do so, the ingress node sets the LMTU to TMAP for all traffic designated by the SA. 
Upon receiving a TLP larger than the TMAP, the packet is discarded and an ICMP PTB message is returned to the Source which then performs Source Fragmentation (5) (See Section 8.2.1. of {{!RFC4301}}).
It is worth mentioning that only future packets will be impacted, and not those causing fragmentation. 

When the TLP is an IPv4 packet with DF=0, the ingress node SHOULD perform Source Fragmentation of the TTP, also represented as Inner Fragmentation (3), sending chunks that do not exceeds TMAP. 

Figure 11 in Section 4.2.2 of {{?I-D.ietf-intarea-tunnels}} with tunnel MTU set to TMAP achieves both recommendations, while Figure 12 in Section 4.2.2 describes the inner fragmentation. 


# Sending a Packet Too Big Notification {#sec-send-ptb}

A packet can be rejected because the size of the LTP exceeds the LMTU (of the router component) or when the (reassembled) LTP exceeds the EMTU_R (of the interface component) and so IPsec decapsulation cannot be done.

When the LTP size exceeds the EMTU_R, the egress node SHOULD send a Packet Too Big (PTB) notification that includes the EMTU_R and the LMTU.
If the packet results from a reassembly operation, the egress node MUST send a LMAP notification with the LMAP.
If the packet does not result from a reassembly operation, the egress node MUST NOT send a LMAP notification.


~~~
Egress Security Gateway                 Ingress Security Gateway
-------------------------------------------------------------------
HDR SK { N(PTB)} -->
~~~

# Receiving a Packet Too Big Notification

Upon receiving a PTB notification, the egress node computes the Tunnel MTU (TMTU) as follows:

~~~
TMTU = EMTU_R - outer IP header - encapsulation overhead
if LMAP notification is not received:
  TMAP is derived from the LMAP notification  
else: 
  TMAP = LMTU - outer IP header - encapsulation overhead 
TMAP = min( TMAP, TMTU )
 
~~~
{: #fig-tmtu title="Computation of TMTU" }
with the same notation as in {{fig-tmap}}:
EMTU_R:
: The value provided in the PTB notification related to the MTU associated to the egress interface (see {{sec-send-ptb}})
LMTU :
: The value provided in the PTB notification related to the LMTU associated to the egress router (see {{sec-send-ptb}})

The ingress node SHOULD proceed with TMAP as described in {{sec-recv-lmap}}.

The ingress node MUST ensure the size of the TTP do not exceed the computed TMTU and MUST ensure the size of the LTP do not exceed the LMTU provided in the PTB notification.    

# Payload Description

{{fig:notify}} illustrates the Notify Payload packet format as described in Section 3.10 of {{RFC7296}} with a 4 bytes path allowed MTU value as notification data.
This format is used for both the LMAP_AND_PTB_SUPPORTED, LMAP and PTB notifications.

~~~
1                   2                   3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Next Payload  |C|  RESERVED   |         Payload Length        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  Protocol ID  |   SPI Size    |      Notify Message Type      |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                                                               |
~                       Notification Data                       ~
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
~~~
{: #fig:notify title="Notify Message Format"}

The fields Next Payload, Critical Bit, RESERVED and Payload Length are defined in {{!RFC7296}}. Specific fields defined in this document are:

Protocol ID (1 octet):
: set to zero.
SPI Size (1 octet):
: set to zero.
Notify Message Type (2 octets):
: Specifies the type of notification message. It is set to TBD1 for the LMAP_AND_PTB_SUPPORTED notification, TBD2 for the LMAP notification and TBD3 for the PTB notification.
Notification Data:
: Specifies the data associated to the notification message. It is empty for the LMAP_AND_PTB_SUPPORTED notification or a 4 octets that contains the MTU value for the LMAP and PTB notification - as represented in {{fig:LMAP_data}} and {{fig:PTB_data}}.

~~~
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|IPVers |       Reserved        |          FragLen              |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
~~~
{: #fig:LMAP_data title="Notification Data for LMAP"}

with:

IPVersion (4 bits): 
: The IPversion of the received packet  
Reserved:
: Reserved bytes MUTS be set by the egress node to zero and MUST be ignored by th eingress node.
FragLen (2 bytes):
: The FragLen value (see {{sec-send-lmap}})

~~~
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                         LMTU                                  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                        EMTU_R                                 |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
~~~
{: #fig:PTB_data title="Notification Data for PTB"}

with:
LMTU (4 bytes):
: The LMTU of the egress router
EMTU_R (4 bytes):
: The EMTU_R of the egress interface

# IANA Considerations

IANA is requested to allocate two values in the "IKEv2 Notify Message Types - Status Types" registry
(available at https://www.iana.org/assignments/ikev2-parameters/ikev2-parameters.xhtml#ikev2-parameters-16) with the following definition:

~~~
+=======+================================+
| Value | NOTIFY MESSAGES - STATUS TYPES |
+=======+================================+
| TBD1  | LMAP_AND_SUPPORTED             |
| TBD2  | LMAP                           |
| TBD3  | PTB                            |
+-------+--------------------------------+
~~~

# Security Considerations

This document defines an IKEv2 extension to enable an egress node to notify an ingress node that fragmentation is happening as well as the observed fragment length. 
In addition, the extension also enable to an egress node to notify an ingress node that a packet too big has been discarded, together with some complementary informations to appropriately update the MTU. 
  
These pieces of information are transferred over the authenticated IKEv2 channel which ensures the origin of the message. 
Assuming the egress node is trusted, the ingress node can trust what is being reported effectively observed (like fragmentation is happening, the observed fragment length, a packet too big has been received) by the egress node and that some information are effectively accurate such as the egress LMTU and EMTU_R. 
When fragmentation happens and a LMAP notification is being sent, the egress node MUST send the notification once the reassembled packet has been decapsulated.
This ensure that fragmentation has been performed over a authenticated TLP and ensure the TLP has not been forged by any attacker.  
With IPv6, only outer fragmentation is permitted so, the ingress node can validate the provided information.
However, sending the notification after the IPsec decapsulation enables the egress node to detect potential injection attacks and prevent sending an unnecessary notification, that may be part of a DDoS attack targeting the ingress node itself.
With IPv4 an attacker could set the DF=0 which would allow any mid tunnel fragmentation.
IPsec (ESP or AH) do not cover the DF flag, so the egress cannot trust the fragment length observed has not been forged, and the security considerations related to MTU discovery {{!RFC0791}}, {{!RFC8900}}, {{?RFC4963}}, {{!RFC6864}}, {{!RFC1191}} apply here.
Note that information carried by the LMAP notification are never carried by ICMP, and all LMAP may share with ICMP is that this information will be used to update the MTU. 

The egress node may not be able to decrypt the encrypted TTP packet if the full encrypted TTP cannot be built.
One possibility is that too many fragments are being sent over a too long period of time (slowloris like attacks) (see {{!RFC8900, Section 3.7}}).
Another possibility is that one fragment exceeds the LMTU or that he reassembled (unverified) encrypted TTP exceeds the EMTU_R. 
In both cases, a PTB notification SHOULD be sent and if fragmentation is observed a LMAP MUST be sent together with the PTB notification. 
Information carried by the PTB (LMTU and EMTU_R) can be trusted.
Without this extension this information woudl have been carried by ICMP over an unprotected channel, so there is an advantage in using the PTB notification over ICMP. 
However, information carried by the LMAP notification cannot be trusted and similar security considerations related to MTU discovery {{!RFC0791}}, {{!RFC8900}}, {{?RFC4963}}, {{!RFC6864}}, {{!RFC1191}} apply here.


Fragmentation happens on a per LTP basis and packet size exceeding EMTU_R happens on a TTP basis.
During high packet rates, this sending a notification for each of these packets is likely to be used by an attacker to trigger a DDoS attack to both egress and ingress nodes.
As a result, the egress node SHOULD be able to configure the maximum rate at which the notifications are sent. 
This includes the ability to indicate that LMAP notifications (without PTB) are not sent when the outer IP addresses are of version IPv6.
The reasoning is that with IPv6, the egress node observes outer fragmentation, in which case the ingress node is already aware of it.
In addition, an egress node SHOULD be able to configure a threshold for number of alert per SAs before a notification is sent, a rate limit per SA.

# Acknowledgements

The authors would like to thank Paul Wouters, Joe Touch for his reviews and valuable comments and suggestions.
